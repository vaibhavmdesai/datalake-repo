# Kafka
# Zookeeper
# Postgres
# Grafana
# minio s3
# trino
# splunk
# dremio

# kafka:
  #   image: wurstmeister/kafka
  #   hostname: kafka
  #   ports: 
  #     - "9092:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ADVERTISED_HOST_NAME: kafka
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
  #     KAFKA_LOG_DIRS: /kafka/kafka-logs
  #   volumes:
  #     - ./volumes/kafka-logs:/kafka/kafka-logs
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   depends_on:
  #     - zookeeper
  #   networks:
  #     - trino-network

  
version: '3.7'
services:

  sparkhome:
    platform: linux/x86_64
    image: sparkhome:3.3.0
    ports:
      - 8888:8888
    container_name: sparkhome
    volumes:
      # - ./volumes/spark-home/notebooks:/opt/spark/work-dir/notebooks
      - /home/vaibhav/Study/data-engineering/git-repos:/opt/spark/work-dir/git-repos
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - AWS_DEFAULT_REGION=us-east-1
    networks:
      - trino-network

  kafka:
    image: wurstmeister/kafka
    hostname: kafka
    ports: 
      - "9092:9092"
      - "7071:7071"  # Prometheus JMX Exporter
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_JMX_OPTS: >
        -Dcom.sun.management.jmxremote=true
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Dcom.sun.management.jmxremote.port=9999
        -Dcom.sun.management.jmxremote.rmi.port=9999
        -Djava.rmi.server.hostname=localhost
    volumes:
      - ./volumes/kafka-logs:/kafka/kafka-logs
      - /var/run/docker.sock:/var/run/docker.sock
      - ./jmx:/opt/jmx-exporter
    command: >
      sh -c "export KAFKA_OPTS='
        -javaagent:/opt/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=7071:/opt/jmx-exporter/kafka.yml
      ' && start-kafka.sh"
    depends_on:
      - zookeeper
    networks:
      - trino-network

  postgresdb:
    image: dannyma/psql-docker:latest
    environment:
      POSTGRES_HOST_AUTH_METHOD: 'trust'
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/pgdata:/var/lib/postgresql/data
    networks:
      - trino-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - trino-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./volumes/grafana-data:/var/lib/grafana
    networks:
      - trino-network

  minio:
    image: minio/minio:RELEASE.2023-07-21T21-12-44Z
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=storage
      - MINIO_REGION_NAME=us-east-1
      - MINIO_REGION=us-east-1
    volumes:
      - ./volumes/minio-data:/data
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]
    networks:
      - trino-network

  splunk:
    image: splunk/splunk:latest
    container_name: splunk1
    hostname: splunk1
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_PASSWORD=password1

    ports:
      - 8002:8000
      - 8088:8088
      - 8089:8089
      - 9997:9997
    networks:
      - trino-network

  trino:
    hostname: trino
    image: 'trinodb/trino:351'
    ports:
      - '8086:8080'
    volumes:
      - ./etc:/usr/lib/trino/etc:ro
    networks:
      - trino-network

  mariadb:
    hostname: mariadb
    image: mariadb:10.5.8
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_DATABASE: metastore_db
    networks:
      - trino-network

  hive-metastore:
    hostname: hive-metastore
    image: 'bitsondatadev/hive-metastore:latest'
    ports:
      - '9083:9083' # Metastore Thrift
    volumes:
      - ./conf/metastore-site.xml:/opt/apache-hive-metastore-3.0.0-bin/conf/metastore-site.xml:ro
    environment:
      METASTORE_DB_HOSTNAME: mariadb
    depends_on:
      - mariadb
    networks:
      - trino-network

  kafka-ui:
    hostname: kafka-ui
    image: provectuslabs/kafka-ui
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - trino-network

volumes:
  grafana-data:
  minio-data:
    driver: local

networks:
  trino-network:
    driver: bridge
